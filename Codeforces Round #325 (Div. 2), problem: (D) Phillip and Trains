#include<bits/stdc++.h>

using namespace std;

#define all(v) v.begin() , v.end()
using ll = long long;
int dp[3][101];
char a[3][101];
int n, k;

bool f(int i, int j, int c) {
	c *= 2;
	if (j + c > n - 1)
		return 0;
	if (a[i][j + c] != 's' && a[i][j + c] != '.')
		return 1;
	return 0;

}
int solve(int i, int j) {
	if (i < 0 || i == 3)
		return 0;
	int c = j;
	if (f(i, j, c))
		return 0;
	if (j == n - 1)
		return 1;
	int &ret = dp[i][j];
	if (ret != -1)
		return ret;
	if (f(i, j + 1, c))
		return 0;
	int c1 = 0, c2 = c1, c3 = c1;
	if (!f(i + 1, j + 1, c))
		c1 = solve(i + 1, j + 1);
	if (!f(i - 1, j + 1, c))
		c2 = solve(i - 1, j + 1);
	if (!f(i, j + 1, c))
		c3 = solve(i, j + 1);

	return ret = (int) (c1 || c2 || c3);

}
int main() {
//ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int T;
	scanf("%d", &T);
	while (T--) {
		scanf("%d%d", &n, &k);
		int si, sj;
		for (int i = 0; i < 3; ++i) {
			for (int j = 0; j < n; ++j) {
				scanf(" %c", &a[i][j]);
				if (a[i][j] == 's')
					si = i, sj = j;
			}
		}

		memset(dp, -1, sizeof(dp));
		int t = solve(si, sj);
		if (t)
			puts("YES");
		else
			puts("NO");
	}
	return 0;

}
